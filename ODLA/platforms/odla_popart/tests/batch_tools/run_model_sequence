#!/bin/bash
TEST_NAME=qtc_erf_bs1
# use 1 ipu config to test no pipeline
#export POPLAR_ENGINE_OPTIONS='{"autoReport.all":"true", "debug.allowOutOfMemory":"true", "autoReport.directory":"./report"}'
HALO_DIR=/data/jackz/ODLA_POPART/mine/heterogeneity-aware-lowering-and-optimization
export LD_LIBRARY_PATH=/data/jackz/ODLA_POPART/cnpy/build/:$HALO_DIR/build/lib:$LD_LIBRARY_PATH
export ODLA_POPART_CONFIG=odla_popart_seq.json
export POPART_LOG_LEVEL=INFO

echo "Remove model.cc"
rm model.cc -rf
echo "Remove built model.so"
rm build/* -rf
echo "Remove onnx model"
rm *.onnx -rf
echo "Copy the $TEST_NAME.cc to model.cc"
cp models_cc/$TEST_NAME.cc model.cc
echo "Compile the model.so"
./compile_so
echo "Copy the model"
cp models_onnx/$TEST_NAME.onnx model.onnx
# run the model.cc to get a onnx?
ldd build/model.so|grep odla
echo "Please ensure the libodla_popart.so version & press enter to continue ..."
read no_use
#
build/run_so --config $TEST_NAME.json 2>&1 | tee test.log

#build/run_so --config qtc_bs1.json 2>&1 | tee test.log
#echo "=================== test finished ============================="
#python npz_reader.py --npz-file test_result.npz
#mv test_result.npz logs/$TEST_NAME.npz
#mv test.log logs/$TEST_NAME.log
